# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17LMKMDOTv6jm3RfkZuLbA5k0NiMe7MNA
"""

# ! pip install pygam

from pygam import LinearGAM, s, f, l
import pandas as pd
import patsy as pt
import numpy as np
from plotly import subplots
import plotly.offline as py
import plotly.graph_objs as go

data = pd.read_csv("https://github.com/dustywhite7/econ8310-assignment1/raw/main/assignment_data_train.csv")

data['Timestamp'] = pd.to_datetime(data['Timestamp'],
	format='%Y-%m-%d %H:%M:%S')

data.set_index(pd.DatetimeIndex(data['Timestamp']),
	inplace=True)

data.drop('Timestamp', axis=1, inplace=True)

# Generate x and y matrices
eqn = """trips ~ -1 + hour + day +
      month"""
y, x = pt.dmatrices(eqn, data=data)

# Initialize and fit the model
model = LinearGAM(s(0) + s(1) + s(2))
modelFit = model.gridsearch(np.asarray(x), y)

titles = ['hour', 'day', 'month']

fig = subplots.make_subplots(rows=1, cols=3,
	subplot_titles=titles)
fig['layout'].update(height=400, width=1200,
	title='pyGAM', showlegend=False)

for i, title in enumerate(titles):
  XX = model.generate_X_grid(term=i)
  pdep, confi = model.partial_dependence(term=i, width=.95)
  trace = go.Scatter(x=XX[:,i], y=pdep, mode='lines',
  	name='Effect')
  ci1 = go.Scatter(x = XX[:,i], y=confi[:,0],
  	line=dict(dash='dash', color='grey'),
    	name='95% CI')
  ci2 = go.Scatter(x = XX[:,i], y=confi[:,1],
  	line=dict(dash='dash', color='grey'),
    name='95% CI')
  if i<3:
    fig.append_trace(trace, 1, i+1)
    fig.append_trace(ci1, 1, i+1)
    fig.append_trace(ci2, 1, i+1)
  else:
    fig.append_trace(trace, 2, i-2)
    fig.append_trace(ci1, 2, i-2)
    fig.append_trace(ci2, 2, i-2)

dataNew = pd.DataFrame([[j, i, 1] for i in range(1, 32) for j in range(0, 24)], columns=['hour', 'day', 'month'])

xNew = pt.build_design_matrices([x.design_info], dataNew)

pred = modelFit.predict(xNew[0])